<testExecutions version="1">
<file path="src\lecturesDao.test.js">
<testCase name="Should return list of lectures for the userId" duration="4" />
<testCase name="Should not return the list of lectures for a userId that doesn&apos;t exist" duration="0" />
<testCase name="Should return 1 to indicate that the reservation was correctly inserted " duration="5" />
<testCase name="Should not return 1 because lectureId doesn&apos;t correspond to any lecture " duration="1" />
<testCase name="Should return a message indicating lectureId bookings are closed " duration="3" />
<testCase name="Should return a message indicating that the capacity for the classroom is exceeded " duration="3" />
<testCase name="Second reservation should return a message showing that a seat for that lectureId is already booked" duration="0" />
<testCase name="Should return list of student booked for a certain lectureId" duration="2" />
<testCase name="Should not return list of student but undefined because of wrong lectureId" duration="0" />
<testCase name="Should return info about all the lectures scheduled for tomorrow, so that email notifications can be sent" duration="2" />
<testCase name="Should return an object with necessary info related to specific booking, so that the email confirmation can be sent" duration="1" />
<testCase name="Should return an empty object" duration="0" />
<testCase name="Should permit the deletion of the booking by the student" duration="3" />
<testCase name="Should reject the request of deletion of booking by the student because the lectureId doesn&apos;t exist" duration="1" />
<testCase name="Should reject the request of deletion of booking by the student because his booking doesn&apos;t exist" duration="2" />
<testCase name="Should permit the deletion of lecture by the teacher since the time constraint is satisfied" duration="3" />
<testCase name="Should reject the request of deletion by a teacher because of the not satisfied time constraint" duration="1" />
<testCase name="Should reject the request of deletion by a teacher" duration="0" />
<testCase name="Should return Bookings for a certain student" duration="1" />
<testCase name="Should return an empty array since nobody was booked for that cancelled lecture" duration="1" />
<testCase name="Should return an array of info and emails" duration="0" />
<testCase name="Should return an empty array since teacherId for that cancelled lecture doesn&apos;t exist" duration="1" />
</file>
<file path="src\userDao.test.js">
<testCase name="Should return correctly user by his email" duration="1" />
<testCase name="Should return correctly user by his id" duration="1" />
<testCase name="Should not return users with an email that does not exist" duration="1" />
<testCase name="Should not return users with an id that does not exist" duration="0" />
<testCase name="Hashed password should match with the provided plaintext one" duration="194" />
</file>
<file path="src\services\email.test.js">
<testCase name="Should send the email to teachers" duration="4" />
<testCase name="Should send the email for booking confirmation" duration="1" />
<testCase name="Should not send the email since that lectureId doesn&apos;t exist in the db" duration="1" />
<testCase name="Should send emails to all the student booked for that cancelled lecture" duration="0" />
<testCase name="Should not send emails because the array is empty" duration="0" />
</file>
<file path="src\subjectsDao.test.js">
<testCase name="Should return correctly subject name by it id" duration="0" />
<testCase name="Should not return subjects with an id that does not exist" duration="1" />
</file>
</testExecutions>